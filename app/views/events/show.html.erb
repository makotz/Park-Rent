<h1><%= @event.title %></h1>
<h3>Organizer: <%= @event.user.full_name %></h3>
<h4>Description: <%= @event.description %></h4>
<% if user_signed_in? %>
  <%= link_to "Delete Event", user_event_path(current_user, @event), method: :delete %>
  <% current_user.parkingspots.each do |parkingspot| %>
    <%= link_to "#{parkingspot.title}", event_parkingspot_rentals_path(@event, parkingspot.id), method: :post %>
  <% end %>
<% end %>

<% if @parkingspots.length != 0 %>
  <h2>Offered Parkingspots</h2>
  <% @parkingspots.each do |parkingspot| %>
    <%= parkingspot.title %> (<%= parkingspot.title %>) <%= link_to "Rent parkingspot", event_parkingspot_rental_path(@event, parkingspot, find_rentals(@event, parkingspot)), method: :patch %>
  <% end %>
  <div style='width: 800px;'>
    <div id="map" style='width: 800px; height: 400px;'></div>
  </div>
<% else %>
  <h2> No Parkingspots offered at the moment...</h2>
<% end %>

<div id="map" style='width: 800px; height: 400px;'></div>

<script>

var citymap = {
  chicago: {
    center: {lat: 41.878, lng: -87.629},
    population: 2714856
  },
  newyork: {
    center: {lat: 40.714, lng: -74.005},
    population: 8405837
  },
  losangeles: {
    center: {lat: 34.052, lng: -118.243},
    population: 3857799
  },
  vancouver: {
    center: {lat: 49.25, lng: -123.1},
    population: 603502
  }
};

function initMap() {
  // Create the map.
  var map = new google.maps.Map(document.getElementById('map'), {
    zoom: 4,
    center: {lat: 37.090, lng: -95.712},
    mapTypeId: 'terrain'
  });

  // Construct the circle for each value in citymap.
  // Note: We scale the area of the circle based on the population.
  for (var city in citymap) {
    // Add the circle for this city to the map.
    var cityCircle = new google.maps.Circle({
      strokeColor: '#FF0000',
      strokeOpacity: 0.8,
      strokeWeight: 2,
      fillColor: '#FF0000',
      fillOpacity: 0.35,
      map: map,
      center: citymap[city].center,
      radius: Math.sqrt(citymap[city].population) * 100
    });
  }
}
initMap()
handler = Gmaps.build('Google');
handler.buildMap({ provider: {

}, internal: {id: 'map'}}, function(){
  markers = handler.addMarkers([
    {
      "lat": <%= @event.latitude %>,
      "lng": <%= @event.longitude %>,
      "infowindow": "<%= @event.title %>"
    },
  ]);
  handler.bounds.extendWith(markers);
  handler.fitMapToBounds();
});
</script>
